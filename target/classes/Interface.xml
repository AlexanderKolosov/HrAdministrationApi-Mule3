<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:context="http://www.springframework.org/schema/context" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd">
	<http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8082" doc:name="HTTP Listener Configuration"/>
    <flow name="human-resources-api-main">
        <http:listener config-ref="human-resources-api-httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <apikit:router config-ref="human-resources-api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="human-resources-api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="human-resources-api-console">
        <http:listener config-ref="human-resources-api-httpListenerConfig" path="/console/*" doc:name="HTTP" />
        <apikit:console config-ref="human-resources-api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="get:/companies:human-resources-api-config">
        <flow-ref name="getCompaniesFlow" doc:name="getCompaniesFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/companies">
        <flow-ref name="postCompaniesFlow" doc:name="postCompaniesFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/companies/{company_id}">
        <flow-ref name="getCompanyByIdFlow" doc:name="getCompanyByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="put:/companies/{company_id}">
        <flow-ref name="putCompanyByIdFlow" doc:name="putCompanyByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="delete:/companies/{company_id}">
        <flow-ref name="deleteCompanyByIdFlow" doc:name="deleteCompanyByIdFlow"/>
        <logger message="Finished" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/departments">
        <flow-ref name="getDepartmentsFlow" doc:name="getDepartmentsFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/departments">
        <flow-ref name="postDepartmentsFlow" doc:name="postDepartmentsFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/departments/{department_id}">
        <flow-ref name="getDepartmentByIdFlow" doc:name="getDepartmentByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="put:/departments/{department_id}">
        <flow-ref name="putDepartmentByIdFlow" doc:name="putDepartmentByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="delete:/departments/{department_id}">
        <flow-ref name="deleteDepartmentByIdFlow" doc:name="deleteDepartmentByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/departments/companies/{company_id}">
        <flow-ref name="getDepartmentByCompanyIdFlow" doc:name="getDepartmentByCompanyIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/departments/companies/{company_id}">
        <flow-ref name="postDepartmentsByCompanyIdFlow" doc:name="postDepartmentsByCompanyIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/employees">
        <flow-ref name="getEmployeesFlow" doc:name="getEmployeesFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/employees">
        <flow-ref name="postEmployeesFlow" doc:name="postEmployeesFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/employees/{employee_id}">
        <flow-ref name="getEmployeeByIdFlow" doc:name="getEmployeeByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="put:/employees/{employee_id}">
        <flow-ref name="putEmployeeByIdFlow" doc:name="putEmployeeByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="delete:/employees/{employee_id}">
        <flow-ref name="deleteEmployeeByIdFlow" doc:name="deleteEmployeeByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/employees/companies/{company_id}">
        <flow-ref name="getEmployeesByCompanyIdFlow" doc:name="getEmployeesByCompanyIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/employees/companies/{company_id}">
        <flow-ref name="postEmployeeByCompanyIdFlow" doc:name="postEmployeeByCompanyIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/employees/departments/{department_id}">
        <flow-ref name="getEmployeesByDepartmentIdFlow" doc:name="getEmployeesByDepartmentIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/employees/departments/{department_id}">
        <flow-ref name="postEmployeeByDepartmentIdFlow" doc:name="postEmployeeByDepartmentIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/vacations">
        <flow-ref name="getVacationsFlow" doc:name="getVacationsFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/vacations:human-resources-api-config">
        <flow-ref name="postVacationsFlow" doc:name="postVacationsFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/vacations/{vacation_id}">
        <flow-ref name="getVacationByIdFlow" doc:name="getVacationByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="put:/vacations/{vacation_id}">
        <flow-ref name="putVacationByIdFlow" doc:name="putVacationByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="delete:/vacations/{vacation_id}">
        <flow-ref name="deleteEmployeeByIdFlow" doc:name="deleteEmployeeByIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/vacations/companies/{company_id}">
        <flow-ref name="getVacationByCompanyIdFlow" doc:name="getVacationByCompanyIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/vacations/companies/{company_id}">
        <flow-ref name="postVacationsByCompanyIdFlow" doc:name="postVacationsByCompanyIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/vacations/departments/{department_id}">
        <flow-ref name="getVacationByDepartmentIdFlow" doc:name="getVacationByDepartmentIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/vacations/departments/{department_id}">
        <flow-ref name="postVacationsByDepartmentIdFlow" doc:name="postVacationsByDepartmentIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="get:/vacations/employees/{employee_id}">
        <flow-ref name="getVacationByEmployeeIdFlow" doc:name="getVacationByEmployeeIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="post:/vacations/employees/{employee_id}">
        <flow-ref name="postVacationsByEmployeeIdFlow" doc:name="postVacationsByEmployeeIdFlow"/>
        <logger level="INFO" doc:name="Logger"/>
    </flow>

    <apikit:mapping-exception-strategy name="human-resources-api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot; : &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="403">
            <apikit:exception value="org.mule.api.security.NotPermittedException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Forbidden&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
